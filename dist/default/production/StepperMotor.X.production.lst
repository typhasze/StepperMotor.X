

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Feb 03 15:05:16 2020

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _PORTD	set	3971
    16  0000                     _TRISD	set	3989
    17                           
    18                           	psect	smallconst
    19  001000                     __psmallconst:
    20                           	opt stack 0
    21  001000  00                 	db	0
    22  001001                     STR_2:
    23  001001  61                 	db	97	;'a'
    24  001002  6E                 	db	110	;'n'
    25  001003  74                 	db	116	;'t'
    26  001004  69                 	db	105	;'i'
    27  001005  5F                 	db	95	;'_'
    28  001006  63                 	db	99	;'c'
    29  001007  6C                 	db	108	;'l'
    30  001008  6F                 	db	111	;'o'
    31  001009  63                 	db	99	;'c'
    32  00100A  6B                 	db	107	;'k'
    33  00100B  77                 	db	119	;'w'
    34  00100C  69                 	db	105	;'i'
    35  00100D  73                 	db	115	;'s'
    36  00100E  65                 	db	101	;'e'
    37  00100F  00                 	db	0
    38  0000                     
    39                           ; #config settings
    40  001010  00                 	db	0	; dummy byte at the end
    41  0000                     
    42                           	psect	cinit
    43  001136                     __pcinit:
    44                           	opt stack 0
    45  001136                     start_initialization:
    46                           	opt stack 0
    47  001136                     __initialization:
    48                           	opt stack 0
    49  001136                     end_of_initialization:
    50                           	opt stack 0
    51  001136                     __end_of__initialization:
    52                           	opt stack 0
    53  001136  0E00               	movlw	low (__Lsmallconst shr (0+16))
    54  001138  6EF8               	movwf	tblptru,c
    55  00113A  0E10               	movlw	high __Lsmallconst
    56  00113C  6EF7               	movwf	tblptrh,c
    57  00113E  0100               	movlb	0
    58  001140  EF8C  F008         	goto	_main	;jump to C main() function
    59                           tblptru	equ	0xFF8
    60                           tblptrh	equ	0xFF7
    61                           
    62                           	psect	cstackCOMRAM
    63  000001                     __pcstackCOMRAM:
    64                           	opt stack 0
    65  000001                     delay_ms@x:
    66                           	opt stack 0
    67                           
    68                           ; 2 bytes @ 0x0
    69  000001                     	ds	2
    70  000003                     ??_delay_ms:
    71                           
    72                           ; 1 bytes @ 0x2
    73  000003                     	ds	1
    74  000004                     delay_ms@i:
    75                           	opt stack 0
    76                           
    77                           ; 2 bytes @ 0x3
    78  000004                     	ds	2
    79  000006                     spinMotor@rate:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x5
    83  000006                     	ds	2
    84  000008                     spinMotor@direction:
    85                           	opt stack 0
    86                           
    87                           ; 2 bytes @ 0x7
    88  000008                     	ds	2
    89  00000A                     spinMotor@i:
    90                           	opt stack 0
    91                           
    92                           ; 2 bytes @ 0x9
    93  00000A                     	ds	2
    94  00000C                     tblptru	equ	0xFF8
    95                           tblptrh	equ	0xFF7
    96                           
    97                           ; 1 bytes @ 0xB
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 12 in file "Test.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    2
   123 ;; This function calls:
   124 ;;		_spinMotor
   125 ;;		_startMotor
   126 ;;		_stopMotor
   127 ;; This function is called by:
   128 ;;		Startup code after reset
   129 ;; This function uses a non-reentrant model
   130 ;;
   131                           
   132                           	psect	text0
   133  001118                     __ptext0:
   134                           	opt stack 0
   135  001118                     _main:
   136                           	opt stack 29
   137                           
   138                           ;Test.c: 13: startMotor();
   139                           
   140                           ;incstack = 0
   141  001118  ECA6  F008         	call	_startMotor	;wreg free
   142  00111C                     l965:
   143                           
   144                           ;Test.c: 16: spinMotor(5, 0);
   145  00111C  0E00               	movlw	0
   146  00111E  6E07               	movwf	spinMotor@rate+1,c
   147  001120  0E05               	movlw	5
   148  001122  6E06               	movwf	spinMotor@rate,c
   149  001124  0E00               	movlw	0
   150  001126  6E09               	movwf	spinMotor@direction+1,c
   151  001128  0E00               	movlw	0
   152  00112A  6E08               	movwf	spinMotor@direction,c
   153  00112C  EC09  F008         	call	_spinMotor	;wreg free
   154                           
   155                           ;Test.c: 35: stopMotor();
   156  001130  ECA2  F008         	call	_stopMotor	;wreg free
   157  001134  D7F3               	goto	l965
   158  001136                     __end_of_main:
   159                           	opt stack 0
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           
   163 ;; *************** function _stopMotor *****************
   164 ;; Defined at:
   165 ;;		line 26 in file "Motor.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels used:    1
   185 ;; This function calls:
   186 ;;		Nothing
   187 ;; This function is called by:
   188 ;;		_main
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text1
   193  001144                     __ptext1:
   194                           	opt stack 0
   195  001144                     _stopMotor:
   196                           	opt stack 30
   197                           
   198                           ;Motor.c: 27: PORTD = 0x00;
   199                           
   200                           ;incstack = 0
   201  001144  0E00               	movlw	0
   202  001146  6E83               	movwf	3971,c	;volatile
   203                           
   204                           ;Motor.c: 28: TRISD = 0xFF;
   205  001148  6895               	setf	3989,c	;volatile
   206  00114A  0012               	return		;funcret
   207  00114C                     __end_of_stopMotor:
   208                           	opt stack 0
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           
   212 ;; *************** function _startMotor *****************
   213 ;; Defined at:
   214 ;;		line 22 in file "Motor.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels used:    1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text2
   242  00114C                     __ptext2:
   243                           	opt stack 0
   244  00114C                     _startMotor:
   245                           	opt stack 30
   246                           
   247                           ;Motor.c: 23: TRISD = 0;
   248                           
   249                           ;incstack = 0
   250  00114C  0E00               	movlw	0
   251  00114E  6E95               	movwf	3989,c	;volatile
   252  001150  0012               	return		;funcret
   253  001152                     __end_of_startMotor:
   254                           	opt stack 0
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           
   258 ;; *************** function _spinMotor *****************
   259 ;; Defined at:
   260 ;;		line 31 in file "Motor.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;  rate            2    5[COMRAM] int 
   263 ;;  direction       2    7[COMRAM] int 
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  i               2    9[COMRAM] int 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;Total ram usage:        6 bytes
   280 ;; Hardware stack levels used:    1
   281 ;; Hardware stack levels required when called:    1
   282 ;; This function calls:
   283 ;;		_delay_ms
   284 ;; This function is called by:
   285 ;;		_main
   286 ;;		_wash
   287 ;;		_dry
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text3
   292  001012                     __ptext3:
   293                           	opt stack 0
   294  001012                     _spinMotor:
   295                           	opt stack 29
   296                           
   297                           ;Motor.c: 32: int i = 0;
   298                           
   299                           ;incstack = 0
   300  001012  0E00               	movlw	0
   301  001014  6E0B               	movwf	spinMotor@i+1,c
   302  001016  0E00               	movlw	0
   303  001018  6E0A               	movwf	spinMotor@i,c
   304  00101A                     l851:
   305                           
   306                           ;Motor.c: 33: for (; i < 100; i++) {
   307  00101A  BE0B               	btfsc	spinMotor@i+1,7,c
   308  00101C  D006               	goto	l855
   309  00101E  500B               	movf	spinMotor@i+1,w,c
   310  001020  E160               	bnz	l34
   311  001022  0E64               	movlw	100
   312  001024  5C0A               	subwf	spinMotor@i,w,c
   313  001026  B0D8               	btfsc	status,0,c
   314  001028  0012               	return	
   315  00102A                     l855:
   316                           
   317                           ;Motor.c: 34: if (direction == 0 ){
   318  00102A  5008               	movf	spinMotor@direction,w,c
   319  00102C  1009               	iorwf	spinMotor@direction+1,w,c
   320  00102E  A4D8               	btfss	status,2,c
   321  001030  D029               	goto	l871
   322                           
   323                           ;Motor.c: 35: PORTD = 0b00000011;
   324  001032  0E03               	movlw	3
   325  001034  6E83               	movwf	3971,c	;volatile
   326                           
   327                           ;Motor.c: 36: delay_ms(rate);
   328  001036  C006  F001         	movff	spinMotor@rate,delay_ms@x
   329  00103A  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   330  00103E  EC72  F008         	call	_delay_ms	;wreg free
   331                           
   332                           ;Motor.c: 37: PORTD = 0b00000110;
   333  001042  0E06               	movlw	6
   334  001044  6E83               	movwf	3971,c	;volatile
   335                           
   336                           ;Motor.c: 38: delay_ms(rate);
   337  001046  C006  F001         	movff	spinMotor@rate,delay_ms@x
   338  00104A  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   339  00104E  EC72  F008         	call	_delay_ms	;wreg free
   340                           
   341                           ;Motor.c: 39: PORTD = 0b00001100;
   342  001052  0E0C               	movlw	12
   343  001054  6E83               	movwf	3971,c	;volatile
   344                           
   345                           ;Motor.c: 40: delay_ms(rate);
   346  001056  C006  F001         	movff	spinMotor@rate,delay_ms@x
   347  00105A  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   348  00105E  EC72  F008         	call	_delay_ms	;wreg free
   349                           
   350                           ;Motor.c: 41: PORTD = 0b00001001;
   351  001062  0E09               	movlw	9
   352  001064  6E83               	movwf	3971,c	;volatile
   353                           
   354                           ;Motor.c: 42: delay_ms(rate);
   355  001066  C006  F001         	movff	spinMotor@rate,delay_ms@x
   356  00106A  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   357  00106E  EC72  F008         	call	_delay_ms	;wreg free
   358                           
   359                           ;Motor.c: 43: PORTD = 0b00000011;
   360  001072  0E03               	movlw	3
   361  001074  6E83               	movwf	3971,c	;volatile
   362                           
   363                           ;Motor.c: 44: delay_ms(rate);
   364  001076  C006  F001         	movff	spinMotor@rate,delay_ms@x
   365  00107A  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   366  00107E  EC72  F008         	call	_delay_ms	;wreg free
   367                           
   368                           ;Motor.c: 45: }
   369  001082  D02C               	goto	l887
   370  001084                     l871:
   371                           
   372                           ;Motor.c: 46: else if (direction == 1){
   373  001084  0408               	decf	spinMotor@direction,w,c
   374  001086  1009               	iorwf	spinMotor@direction+1,w,c
   375  001088  A4D8               	btfss	status,2,c
   376  00108A  D028               	goto	l887
   377                           
   378                           ;Motor.c: 47: PORTD = 0b00001001;
   379  00108C  0E09               	movlw	9
   380  00108E  6E83               	movwf	3971,c	;volatile
   381                           
   382                           ;Motor.c: 48: delay_ms(rate);
   383  001090  C006  F001         	movff	spinMotor@rate,delay_ms@x
   384  001094  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   385  001098  EC72  F008         	call	_delay_ms	;wreg free
   386                           
   387                           ;Motor.c: 49: PORTD = 0b00001100;
   388  00109C  0E0C               	movlw	12
   389  00109E  6E83               	movwf	3971,c	;volatile
   390                           
   391                           ;Motor.c: 50: delay_ms(rate);
   392  0010A0  C006  F001         	movff	spinMotor@rate,delay_ms@x
   393  0010A4  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   394  0010A8  EC72  F008         	call	_delay_ms	;wreg free
   395                           
   396                           ;Motor.c: 51: PORTD = 0b00000110;
   397  0010AC  0E06               	movlw	6
   398  0010AE  6E83               	movwf	3971,c	;volatile
   399                           
   400                           ;Motor.c: 52: delay_ms(rate);
   401  0010B0  C006  F001         	movff	spinMotor@rate,delay_ms@x
   402  0010B4  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   403  0010B8  EC72  F008         	call	_delay_ms	;wreg free
   404                           
   405                           ;Motor.c: 53: PORTD = 0b00000011;
   406  0010BC  0E03               	movlw	3
   407  0010BE  6E83               	movwf	3971,c	;volatile
   408                           
   409                           ;Motor.c: 54: delay_ms(rate);
   410  0010C0  C006  F001         	movff	spinMotor@rate,delay_ms@x
   411  0010C4  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   412  0010C8  EC72  F008         	call	_delay_ms	;wreg free
   413                           
   414                           ;Motor.c: 55: PORTD = 0b00001001;
   415  0010CC  0E09               	movlw	9
   416  0010CE  6E83               	movwf	3971,c	;volatile
   417                           
   418                           ;Motor.c: 56: delay_ms(rate);
   419  0010D0  C006  F001         	movff	spinMotor@rate,delay_ms@x
   420  0010D4  C007  F002         	movff	spinMotor@rate+1,delay_ms@x+1
   421  0010D8  EC72  F008         	call	_delay_ms	;wreg free
   422  0010DC                     l887:
   423  0010DC  4A0A               	infsnz	spinMotor@i,f,c
   424  0010DE  2A0B               	incf	spinMotor@i+1,f,c
   425  0010E0  D79C               	goto	l851
   426  0010E2                     l34:
   427  0010E2  0012               	return		;funcret
   428  0010E4                     __end_of_spinMotor:
   429                           	opt stack 0
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           status	equ	0xFD8
   433                           
   434 ;; *************** function _delay_ms *****************
   435 ;; Defined at:
   436 ;;		line 4 in file "delay.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  x               2    0[COMRAM] int 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  i               2    3[COMRAM] int 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;Total ram usage:        5 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_spinMotor
   460 ;;		_oscillateMotor
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text4
   465  0010E4                     __ptext4:
   466                           	opt stack 0
   467  0010E4                     _delay_ms:
   468                           	opt stack 29
   469                           
   470                           ;delay.c: 6: for (int i = 0; i < x; i++)
   471                           
   472                           ;incstack = 0
   473  0010E4  0E00               	movlw	0
   474  0010E6  6E05               	movwf	delay_ms@i+1,c
   475  0010E8  0E00               	movlw	0
   476  0010EA  6E04               	movwf	delay_ms@i,c
   477  0010EC  D00A               	goto	l5
   478  0010EE                     l845:
   479                           
   480                           ;delay.c: 7: {
   481                           ;delay.c: 8: _delay((unsigned long)((1)*(25000000/4000.0)));
   482  0010EE  0E09               	movlw	9
   483  0010F0  6E03               	movwf	??_delay_ms& (0+255),c
   484  0010F2  0E1C               	movlw	28
   485  0010F4                     u247:
   486  0010F4  2EE8               	decfsz	wreg,f,c
   487  0010F6  D7FE               	goto	u247
   488  0010F8  2E03               	decfsz	??_delay_ms& (0+255),f,c
   489  0010FA  D7FC               	goto	u247
   490  0010FC  D000               	nop2	
   491  0010FE  4A04               	infsnz	delay_ms@i,f,c
   492  001100  2A05               	incf	delay_ms@i+1,f,c
   493  001102                     l5:
   494  001102  5001               	movf	delay_ms@x,w,c
   495  001104  5C04               	subwf	delay_ms@i,w,c
   496  001106  5005               	movf	delay_ms@i+1,w,c
   497  001108  0A80               	xorlw	128
   498  00110A  6E03               	movwf	??_delay_ms& (0+255),c
   499  00110C  5002               	movf	delay_ms@x+1,w,c
   500  00110E  0A80               	xorlw	128
   501  001110  5803               	subwfb	??_delay_ms& (0+255),w,c
   502  001112  B0D8               	btfsc	status,0,c
   503  001114  0012               	return	
   504  001116  D7EB               	goto	l845
   505  001118                     __end_of_delay_ms:
   506                           	opt stack 0
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           wreg	equ	0xFE8
   510                           status	equ	0xFD8
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           wreg	equ	0xFE8
   514                           status	equ	0xFD8
   515                           
   516                           	psect	rparam
   517  0000                     tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           wreg	equ	0xFE8
   520                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spinMotor
    _spinMotor->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2020
                          _spinMotor
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (1) _stopMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _startMotor                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinMotor                                            6     2      4    2020
                                              5 COMRAM     6     2      4
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2    1326
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spinMotor
     _delay_ms
   _startMotor
   _stopMotor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BITBANK12          100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BIGRAM             E7F      0       0      38        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Feb 03 15:05:16 2020

                      l5 1102                       l34 10E2                      l851 101A  
                    l845 10EE                      l871 1084                      l855 102A  
                    l965 111C                      l887 10DC                      u247 10F4  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_WDT$OFF 000000  
                   STR_2 1001                     _main 1118                     start 0000  
           ___param_bank 000010                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95                    status 000FD8          __initialization 1136  
           __end_of_main 1136                   ??_main 000C            __activetblptr 000001  
          spinMotor@rate 0006         __end_of_delay_ms 1118           __CFG_XINST$OFF 000000  
     spinMotor@direction 0008             __mediumconst 0000                   tblptrh 000FF7  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 1136  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_spinMotor 00D2  
              ?_delay_ms 0001       __size_of_stopMotor 0008                  __Hparam 0000  
                __Lparam 0000             __psmallconst 1000                  __pcinit 1136  
                __ramtop 1000                  __ptext0 1118                  __ptext1 1144  
                __ptext2 114C                  __ptext3 1012                  __ptext4 10E4  
             ??_delay_ms 0003     end_of_initialization 1136        __end_of_spinMotor 10E4  
      __end_of_stopMotor 114C               _startMotor 114C      start_initialization 1136  
      __size_of_delay_ms 0034              ?_startMotor 0001              __smallconst 1000  
              delay_ms@i 0004                delay_ms@x 0001                _spinMotor 1012  
    __size_of_startMotor 0006                _stopMotor 1144               spinMotor@i 000A  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 1000  
             ?_spinMotor 0006               ?_stopMotor 0001                 _delay_ms 10E4  
          __size_of_main 001E             ??_startMotor 0001              ??_spinMotor 000A  
     __end_of_startMotor 1152              ??_stopMotor 0001  
